<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-08-18T14:58:36+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">shellshock</title><subtitle>None</subtitle><author><name>shellshock</name></author><entry><title type="html">About this blog</title><link href="http://localhost:4000/2022/08/18/about-this-blog/" rel="alternate" type="text/html" title="About this blog" /><published>2022-08-18T00:00:00+05:30</published><updated>2022-08-18T00:00:00+05:30</updated><id>http://localhost:4000/2022/08/18/about-this-blog</id><content type="html" xml:base="http://localhost:4000/2022/08/18/about-this-blog/"><![CDATA[<h2 id="about-this-blog">About this blog</h2>]]></content><author><name>shellshock</name></author><summary type="html"><![CDATA[About this blog]]></summary></entry><entry><title type="html">Basic file archiving and compression on linux</title><link href="http://localhost:4000/2022/08/18/file-archiving-compression/" rel="alternate" type="text/html" title="Basic file archiving and compression on linux" /><published>2022-08-18T00:00:00+05:30</published><updated>2022-08-18T00:00:00+05:30</updated><id>http://localhost:4000/2022/08/18/file-archiving-compression</id><content type="html" xml:base="http://localhost:4000/2022/08/18/file-archiving-compression/"><![CDATA[<ol>
  <li><strong>Archiving a file</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span><span class="nb">tar</span> <span class="nt">-cvf</span> filename.tar foldername/location  
     <span class="sb">`</span><span class="nt">-c</span><span class="sb">`</span> create  
     <span class="sb">`</span><span class="nt">-v</span><span class="sb">`</span> verbos output  
     <span class="sb">`</span><span class="nt">-f</span><span class="sb">`</span> <span class="nb">set </span>a filename/filelocation  
</code></pre></div>    </div>
  </li>
  <li><strong>Compressing a file</strong><br />
 a. To compress a file:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span><span class="nb">gzip </span>filename.tar    
</code></pre></div>    </div>

    <p>b. Show the file:</p>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span><span class="nb">ls</span>  
</code></pre></div>    </div>
  </li>
  <li><strong>Extracting a compressed file</strong><br />
To unzip and extract a file:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">tar</span> <span class="nt">-xzvf</span> filename.tar.gz    
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name>shellshock</name></author><summary type="html"><![CDATA[Archiving a file $ tar -cvf filename.tar foldername/location `-c` create `-v` verbos output `-f` set a filename/filelocation]]></summary></entry><entry><title type="html">First blog post</title><link href="http://localhost:4000/2022/08/18/first-post/" rel="alternate" type="text/html" title="First blog post" /><published>2022-08-18T00:00:00+05:30</published><updated>2022-08-18T00:00:00+05:30</updated><id>http://localhost:4000/2022/08/18/first-post</id><content type="html" xml:base="http://localhost:4000/2022/08/18/first-post/"><![CDATA[]]></content><author><name>shellshock</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Managing GPG keys on linux for better security</title><link href="http://localhost:4000/2022/08/18/gpg/" rel="alternate" type="text/html" title="Managing GPG keys on linux for better security" /><published>2022-08-18T00:00:00+05:30</published><updated>2022-08-18T00:00:00+05:30</updated><id>http://localhost:4000/2022/08/18/gpg</id><content type="html" xml:base="http://localhost:4000/2022/08/18/gpg/"><![CDATA[<h2 id="tutorial">Tutorial</h2>

<ol>
  <li>Create your own private/public key pair and revocation certificate
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>gpg <span class="nt">--expert</span> <span class="nt">--full-gen-key</span>	
</code></pre></div>    </div>
  </li>
  <li>Export you public key
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>gpg <span class="nt">--armor</span> <span class="nt">--export</span> user-id <span class="o">&gt;</span> pubkey.asc
</code></pre></div>    </div>
  </li>
  <li>Export your private key
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>gpg <span class="nt">--export-secret-keys</span> <span class="nt">--armor</span> user-id <span class="o">&gt;</span> privkey.asc
</code></pre></div>    </div>
  </li>
  <li>Protect your priavte key and revocation certificate by keeping them somewhere safe.</li>
  <li>List keys by signature:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>gpg <span class="nt">--list-sigs</span> user_id
</code></pre></div>    </div>
  </li>
  <li>List all keys:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>gpg <span class="nt">--list-keys</span> user_id
</code></pre></div>    </div>
  </li>
  <li>Share your public key on a public keyserver
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>gpg <span class="nt">--send-key</span> key_id
</code></pre></div>    </div>

    <blockquote>
      <p><strong>NOTE</strong>: In Ubuntu by default all the keys are uploaded to keyserver.openpgp.com</p>
    </blockquote>
  </li>
  <li>Change default keyserver to another keyserver:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>gpg <span class="o">[</span>keyserver-address] <span class="nt">--send-key</span> key_id
</code></pre></div>    </div>

    <blockquote>
      <p><strong>NOTE</strong>: If a public key is sent to OpenPGP, it sends a notification 
 on keyowners email address</p>
    </blockquote>
  </li>
  <li>
    <p>By default keys are not available for search by email address, the mail
from openpgp has a link inside it, which needs to be clicked to verify identity</p>
  </li>
  <li>After your key is verified, you can serach for your key on the keyserver:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--search</span> user_id
</code></pre></div>    </div>
  </li>
  <li>Import others public key to your key-ring:
    <blockquote>
      <p>If you want to send someone an encrypted message you´ll first need to import
their public key from a file or keyserver</p>
    </blockquote>

    <ol>
      <li>Import key from a file:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--import</span> public_key_file
</code></pre></div>        </div>
      </li>
      <li>Import if you already know a key_id:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--recv-keys</span> key_id
</code></pre></div>        </div>
      </li>
      <li>Import from a particular keyserver:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--keyserver</span> <span class="o">[</span>keyserver-address] <span class="nt">--recv-keys</span> key_id
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>Validate public keys:
    <blockquote>
      <p>When you recieve a public key from someone, once you imported that public key
how would you verify that public key belongs to that person, we need to authenticate it.</p>
    </blockquote>

    <p>We can try following alternatives:</p>
    <ol>
      <li>You can view the fingerprint of the public key
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--fingerprint</span> user_id
</code></pre></div>        </div>
      </li>
      <li>
        <p>You can contact the keyś owner over the phone or meet in person.</p>
      </li>
      <li>
        <p>Compare the two fingerprints and if the two fingerprints match, means you have the right public key</p>
      </li>
      <li>Then you sign the key as a valid key:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--sign-key</span> key_id
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>
    <p>Managing your keys</p>

    <ol>
      <li>List all keys
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--list-keys</span>
</code></pre></div>        </div>
      </li>
      <li>List all keys with signature
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--list-sigs</span>
</code></pre></div>        </div>
      </li>
      <li>Delete a key-id
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--delete_key</span> key_id
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>List keys in your private ring
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--list-secret-key</span>
</code></pre></div>    </div>
  </li>
  <li>How to extend key expiration date
    <ol>
      <li>List all the keys
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--list-keys</span>
</code></pre></div>        </div>
      </li>
      <li>Select a key using key-id which you want to change expiration of
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--edit-key</span> key-id
</code></pre></div>        </div>
      </li>
      <li>Now you’ll enter the gpg shell, here you can see all the applicable commands using <code class="language-plaintext highlighter-rouge">help</code>command
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg&gt; <span class="nb">help</span>
</code></pre></div>        </div>
      </li>
      <li>List all the keys and select a key you want to edit
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg&gt; list
</code></pre></div>        </div>
      </li>
      <li>Now enter  <code class="language-plaintext highlighter-rouge">expire</code> in the gpg shell to start editing the expiration date
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg&gt; expire
Changing expiration <span class="nb">time </span><span class="k">for </span>the primary key.
Please specify how long the key should be valid.
      0 <span class="o">=</span> key does not expire
   &lt;n&gt;  <span class="o">=</span> key expires <span class="k">in </span>n days
   &lt;n&gt;w <span class="o">=</span> key expires <span class="k">in </span>n weeks
   &lt;n&gt;m <span class="o">=</span> key expires <span class="k">in </span>n months
   &lt;n&gt;y <span class="o">=</span> key expires <span class="k">in </span>n years
Key is valid <span class="k">for</span>? <span class="o">(</span>0<span class="o">)</span>
</code></pre></div>        </div>
      </li>
      <li>Save the changes
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg&gt; save
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>How to use the revocation certificate
    <blockquote>
      <p>If you’re private key is compromised you can regenerate a new key pair using the revocation certificate to let everyone know that you are not using you’re old key anymore.</p>
    </blockquote>

    <blockquote>
      <p>On Linux their’s a default revocation certificate stored in <code class="language-plaintext highlighter-rouge">~/.gnupg/openpgp-revocs.d/</code> location.</p>
    </blockquote>
  </li>
  <li>Following command should be used to revoke a key using a revocation certificate
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--output</span> revocation.rev <span class="nt">--gen-revoke</span> key-id
</code></pre></div>    </div>
  </li>
  <li>Now you should import it to your keyring
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--import</span> revocation.rev
</code></pre></div>    </div>
  </li>
  <li>Now upload the revoked key to the keyserver
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gpg <span class="nt">--send-key</span> key-id
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name>shellshock</name></author><summary type="html"><![CDATA[Tutorial]]></summary></entry><entry><title type="html">Setup ssh key based authentication</title><link href="http://localhost:4000/2022/08/18/ssh-key-based-auth/" rel="alternate" type="text/html" title="Setup ssh key based authentication" /><published>2022-08-18T00:00:00+05:30</published><updated>2022-08-18T00:00:00+05:30</updated><id>http://localhost:4000/2022/08/18/ssh-key-based-auth</id><content type="html" xml:base="http://localhost:4000/2022/08/18/ssh-key-based-auth/"><![CDATA[<h1 id="tutorial">Tutorial</h1>

<p>–</p>

<h2 id="pre-requisites">Pre-requisites</h2>

<ol>
  <li>Install the <code class="language-plaintext highlighter-rouge">openssh-server</code> package using your package manager
 e.g. For Ubuntu or Debian:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span><span class="nb">sudo </span>apt <span class="nb">install </span>openssh-server
</code></pre></div>    </div>
  </li>
  <li>Enable the ssh service
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>ssh 
</code></pre></div>    </div>
  </li>
  <li>Start the ssh service
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span><span class="nb">sudo </span>systemctl start ssh
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="important-notes">Important notes</h2>

<ol>
  <li>
    <p>SSH key pairs are two cryptographically secure keys that can be used to authenticate a client to an SSH server. Each key pair consists of a public key and a private key.</p>
  </li>
  <li>
    <p>The private key is retained by the client and should be kept absolutely secret. Any compromise of the private key will allow the attacker to log into servers that are configured with the associated public key without additional authentication. As an additional precaution, the key can be encrypted on disk with a passphrase.</p>
  </li>
  <li>
    <p>The associated public key can be shared freely without any negative consequences. The public key can be used to encrypt messages that only the private key can decrypt. This property is employed as a way of authenticating using the key pair.</p>
  </li>
  <li>
    <p>The public key is uploaded to a remote server that you want to be able to log into with SSH. The key is added to a special file within the user account you will be logging into called <code class="language-plaintext highlighter-rouge">~/.ssh/authorized_keys</code>.</p>
  </li>
  <li>
    <p>When a client attempts to authenticate using SSH keys, the server can test the client on whether they are in possession of the private key. If the client can prove that it owns the private key, a shell session is spawned or the requested command is executed.</p>
  </li>
</ol>

<p>–</p>

<h3 id="creating-ssh-keys">Creating ssh keys</h3>

<p>Creating a ssh-keypair</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh-keygen
</code></pre></div></div>
<ol>
  <li>This will generate a private and a public key for the system which will be id_rsa and id_rsa.pub respectively.</li>
  <li>At this step ssh will ask you for a different path to store the keys which can be defined by entering the path.</li>
  <li>It will also ask for a passphrase for better security.</li>
  <li>Now we will have two keys (private and public).</li>
  <li>You now have a public and private key that you can use to authenticate. The next step is to place the public key on your server so that you can use SSH key authentication to log in.</li>
</ol>

<h3 id="copying-ssh-key-to-your-server">Copying ssh key to your server</h3>

<p>Using <code class="language-plaintext highlighter-rouge">ssh-copy-id</code> copying the public key:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh-copy-id username@ip_address
</code></pre></div></div>
<p>Copying a specified key:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh-copy-id <span class="nt">-i</span> &lt;path&gt; username@ip_address
</code></pre></div></div>

<h3 id="authenticating-to-your-server-using-ssh-keys">Authenticating to your server using ssh keys</h3>

<p>Now we will connect using</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh username@ip_address
</code></pre></div></div>
<ul>
  <li>This will ask you to authenticate the user and it is the first time logging in and does not recognise the connection.</li>
</ul>

<h3 id="disabling-password-authentication-on-your-server">Disabling password authentication on your server</h3>

<p>Now we will edit the <code class="language-plaintext highlighter-rouge">ssh_config</code> file for futher hardening</p>
<ol>
  <li>Set <code class="language-plaintext highlighter-rouge">PasswordAuthentication no</code></li>
  <li>Set <code class="language-plaintext highlighter-rouge">MaxAuthTries 4</code></li>
  <li>Set <code class="language-plaintext highlighter-rouge">PubkeyAuthentication yes</code></li>
  <li>Set <code class="language-plaintext highlighter-rouge">PermitEmptyPasswords no</code></li>
  <li>Save and exit the config file.</li>
</ol>

<h3 id="final-setps">Final setps</h3>

<ol>
  <li>Restarting ssh
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>service ssh restart
</code></pre></div>    </div>
  </li>
  <li>Enabling ssh
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>service ssh <span class="nb">enable</span>
</code></pre></div>    </div>
    <p>This will start the service on startup everytime.</p>
  </li>
</ol>

<h2 id="all-set-">ALL SET !!!</h2>]]></content><author><name>shellshock</name></author><summary type="html"><![CDATA[Tutorial –]]></summary></entry></feed>